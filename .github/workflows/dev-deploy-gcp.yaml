name: Dev Profile Deploy to GCP Instance

on:
  push:
    branches: ["develop"]
  pull_request:
    branches: ["develop"]

permissions:
  contents: read

env:
  DOCKER_REPO_NAME: ${{ secrets.DOCKER_REPO_NAME }}
  SHA: ${{ github.sha }}
  PROJECT_ID: ${{ secrets.GCE_PROJECT_ID }}
  GCE_INSTANCE: ${{ secrets.GCE_INSTANCE }}
  GCE_INSTANCE_ZONE: ${{ secrets.GCE_INSTANCE_ZONE }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 기본 체크아웃
    - name: Checkout
      uses: actions/checkout@v4
    # Gradlew 실행 허용
    - name: Run chmod to make gradlew executable
      run: chmod +x ./gradlew
    #JDK 세팅
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
    # 환경변수 설정
    - name: Set up environment variables
      run: |
        cd ./src/main/resources
        touch ./application-dev.properties
        echo "${{secrets.DEV_SPRING_PROPERTIES}}" > ./application-dev.properties
      shell: bash
    # Gradle build (Test 제외)
    - name: Build with Gradle
      run: ./gradlew clean build --exclude-task test

    # Docker 이미지 빌드
    - name: Docker Build
      run: |
        docker login --username=peonypeonypeony --password=${{ secrets.DOCKER_USER_PW }}
        docker build --tag peonypeonypeony/$DOCKER_REPO_NAME:reddy-image-$GITHUB_SHA . -f Dockerfile

    - name: Docker Push
      run: |
        docker push peonypeonypeony/$DOCKER_REPO_NAME:reddy-image-$GITHUB_SHA

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker
    # Build the Docker image
    - name: Build
      run: |-
        docker build --tag "gcr.io/$PROJECT_ID/$GCE_INSTANCE-image:$GITHUB_SHA" .
    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "gcr.io/$PROJECT_ID/$GCE_INSTANCE-image:$GITHUB_SHA"
    - name: Deploy
      run: |-
        gcloud compute instances update-container "$GCE_INSTANCE" \
          --zone "$GCE_INSTANCE_ZONE" \
          --container-image "gcr.io/$PROJECT_ID/$GCE_INSTANCE-image:$GITHUB_SHA"